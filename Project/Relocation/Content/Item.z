// AUTHOR: HUDSON GREEN
// CONTRIBUTORS: N/A

class Item {
    
    var ItemName : String = "item.Undefined.name";
    var ItemRecognizableNameBase : String = "Undefined Item";
    var ItemRecognizableName : String = "Undefined Item";
    var ItemType : String = "Item";
    
    var ItemID : Integer = 0;
    
    var ShowID : Boolean = false;
    
    var Sprite : SpriteSource = SpriteSource.MissingTexture;
    
    constructor(itemName : String) {
        
        this.ItemName = itemName;
        this.ItemRecognizableNameBase = String.Concatenate(String.Concatenate("item.", itemName.SubStringFromRuneIndices(4, itemName.Count)), ".name");
        this.ItemRecognizableName = this.ItemRecognizableNameBase;
        
        this.Sprite = SpriteSource.Find(this.ItemName);
        
    }
    
    constructor(itemName : String, useNameAsSpriteSource : Boolean) {
        
        this.ItemName = itemName;
        this.ItemRecognizableNameBase = String.Concatenate(String.Concatenate("item.", itemName.SubStringFromRuneIndices(4, itemName.Count)), ".name");
        this.ItemRecognizableName = this.ItemRecognizableNameBase;
        
        if(useNameAsSpriteSource) {
            this.Sprite = SpriteSource.Find(this.ItemName);
        }
        
    }
    
    function SetSpriteSource(sprite : String) {
        this.Sprite = SpriteSource.Find(sprite);
    }
    
    function SetRecognizableName(id : Integer, name : String) : Integer {
        this.ItemRecognizableNameBase = name;
        this.ShowLabelID(this.ItemID, this.ShowID);
        ++id;
        return id;
    }
    
    function SetItemType(id : Integer, type : String) : Integer {
        this.ItemType = type;
        ++id;
        return id;
    }
    
    function SetID(id : Integer) : Integer {
        this.ItemID = id;
        ++id;
        return id;
    }
    
    function ShowLabelID(id : Integer, showID : Boolean) : Integer {
        
        this.ShowID = showID;
        
        if(showID && this.ItemRecognizableNameBase != "") {
            this.ItemRecognizableName = String.Concatenate(this.ItemRecognizableNameBase, " [ID #`this.ItemID`]");
        } else {
            this.ItemRecognizableName = this.ItemRecognizableNameBase;
        }
        
        ++id;
        
        return id;
        
    }
    
    [Virtual] function Update(dt : Real) {
        
    }
    
}