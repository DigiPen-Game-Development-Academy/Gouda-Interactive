// AUTHOR: HUDSON GREEN
// CONTRIBUTORS: MYLES BUSIG

class EntityBullet : ZilchComponent {
    
    [Property] var FromPlayer : Boolean = true;
    [Property] var Damage : Real = 1;
    
    function Initialize(init : CogInitializer) {
        
        /*if(this.Space.FindObjectByName("EntityPlayer").WeaponManager.ActiveWeapon.ItemName == "WeaponGouda") {
            this.Space.SoundSpace.PlayCue(SoundCue.Find("BulletSpawnDank"));
        } else {
            this.Space.SoundSpace.PlayCue(SoundCue.Find("BulletSpawn"));
        }*/
        
        this.Space.SoundSpace.PlayCue(SoundCue.Find("BulletSpawn"));
        
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
        Zero.Connect(this.Owner, Events.LogicUpdate, this.OnLogicUpdate);
        
    }
    
    function OnCollisionStarted(event : CollisionEvent) {
        
        if(event.OtherObject.Name == Relocation.EntityPlayer && !this.FromPlayer) {
            
            if(!event.OtherObject.Health.IsInvincible) {
                event.OtherObject.Health.DecreaseHealth(this.Damage);
            }
            
            this.Owner.Destroy();
            
        } else if(event.OtherObject.Breakable != null) {
            event.OtherObject.Breakable.TimeTillBreak += this.Damage * 4;
            
            this.Owner.Destroy();
            
            Console.WriteLine("Laser hit: `event.OtherObject.Name`");
        } else if(event.OtherObject.Name == this.Owner.Name) {
            
        } else if(this.FromPlayer && event.OtherObject.Name == "BlockRock") {
            
            if(event.OtherObject.Parent != null)
                event.OtherObject.Parent.Parent.WorldGenerator.DamageBlock(event.OtherObject, 1.0, true);
            
            this.Owner.Destroy();
            
        } else if(event.OtherObject.Name != Relocation.EntityPlayer && this.FromPlayer) {
            
            if(event.OtherObject.Health != null) {
                this.Knockback(event.OtherObject);
                event.OtherObject.Health.DecreaseHealth(this.Damage);
            }
            
            this.Owner.Destroy();
            
        }
        
    }
    
    function OnLogicUpdate(event : UpdateEvent) {
        
    }
    
    function Knockback(otherObject : Cog) {
        
        if(otherObject.RigidBody != null) {
            otherObject.RigidBody.ApplyLinearImpulse(this.Owner.RigidBody.Velocity / Real3(5, 5, 1));
        }
        
    }
    
}
