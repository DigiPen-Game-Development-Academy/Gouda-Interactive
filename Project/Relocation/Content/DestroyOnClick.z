class DestroyChildrenOnClick : ZilchComponent
{
  function Initialize(init : CogInitializer) {
    Zero.Connect(init, Events.AllObjectsInitialized, this.OnAllObjectsInitialized);
  }
  function OnAllObjectsInitialized(event : CogInitializerEvent) {
    foreach (var child in this.Owner.Children) {
      child.AddComponentByName(typeid(Reactive).Name);
      child.AddComponentByName(typeid(DestroyOnClick).Name);
      // Either this or calling Initialize() on each child is required, because tile objects
      // don't get their Initialize() called.
      Zero.Connect(this.Space, Events.MouseUpdate, child.DestroyOnClick.OnMouseUpdate);
    }
  }
}

class DestroyOnClick : ZilchComponent
{
  function Initialize(init : CogInitializer) {
    // This won't happen on tile objects unless you call their initialize manually
    Zero.Connect(this.Space, Events.MouseUpdate, this.OnMouseUpdate);
    // Notice that this doesn't happen for tiles, but it happens for standalone objects
    Console.WriteLine("Hello???");
  }
  [Extension(typeid(Real))] function InRange(center : Real, width : Real) : Boolean {
    return this.X >= center - Math.Abs(width / 2) && this.X <= center + Math.Abs(width / 2);
  }
  function OnMouseUpdate(event : ViewportMouseEvent) {
    if (event.IsButtonDown(MouseButtons.Left)) {
      var pos = this.Owner.Transform.WorldTranslation;
      var size = this.Owner.Transform.WorldScale;
      var mouse = event.ToWorldZPlane(pos.Z).XY;
      if (mouse.X.InRange(pos.X, size.X) && mouse.Y.InRange(pos.Y, size.Y)) {
        this.Owner.Destroy();
      }
    }
  }
}
