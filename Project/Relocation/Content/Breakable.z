// AUTHOR: MYLES BUSIG
// CONTRIBUTORS: N/A

class Breakable : ZilchComponent
{
    var Player : Cog = null;
    
    [Property] var ToolType : String = "None";
    
    [Property] var Loot1ID : Integer = 0;
    [Property] var Loot1MaxAmount : Integer = 0;
    [Property] var Loot2ID : Integer = 0;
    [Property] var Loot2MaxAmount : Integer = 0;
    [Property] var Loot3ID : Integer = 0;
    [Property] var Loot3MaxAmount : Integer = 0;
    
    function Initialize(init : CogInitializer)
    {
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
    }
    
    function Break(event : ViewportMouseEvent)
    {
        var mousePosition = this.LevelSettings.CameraViewport.ScreenToWorldZPlane(Zero.Mouse.ScreenPosition, 0.0);
        
        if (event.IsButtonDown(MouseButtons.Left) && this.IsMouseOnObject(mousePosition))
        {
            Console.WriteLine("Break");
            
            if (this.Space.FindObjectByName("EntityPlayer") == null)
                return;
            
            if (this.Loot1ID != 0)
                this.Space.FindObjectByName("EntityPlayer").Inventory.GiveItemWithAmount(this.Loot1ID, false, this.DieRoll(this.Loot1MaxAmount));
            if (this.Loot2ID != 0)
                this.Space.FindObjectByName("EntityPlayer").Inventory.GiveItemWithAmount(this.Loot2ID, false, this.DieRoll(this.Loot2MaxAmount));
            if (this.Loot3ID != 0)
                this.Space.FindObjectByName("EntityPlayer").Inventory.GiveItemWithAmount(this.Loot3ID, false, this.DieRoll(this.Loot3MaxAmount));
            
            this.Owner.Destroy();
        }
    }
    
    function IsMouseOnObject(mousePosition : Real3) : Boolean
    {
        var ownerPosition = this.Owner.Transform.WorldTranslation;
        var ownerSize = this.Owner.Transform.WorldScale / 2;
        
        if (mousePosition.X >= ownerPosition.X - ownerSize.X &&
            mousePosition.X <= ownerPosition.X + ownerSize.X &&
            mousePosition.Y >= ownerPosition.Y - ownerSize.Y &&
            mousePosition.Y <= ownerPosition.Y + ownerSize.Y)
            return true;
        else
            return false;
    }
    
    function DieRoll(sides : Integer) : Integer
    {
        var randomGen = new Random();
        return randomGen.DieRoll(sides);
    }
}
