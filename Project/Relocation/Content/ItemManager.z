// AUTHOR: HUDSON GREEN
// CONTRIBUTORS: N/A

class ItemManager : ZilchComponent {
    
    var Items : Array[Item] = Global.Items;
    var ID : Integer = 0;
    
    function Initialize(init : CogInitializer) {
        
        this.Items = new Array[Item]();
        
        this.Items.Push(new Item("Circle",              true));
        
        this.Items.Push(new Weapon("ItemPistol",        true,       this.Space, true,   0.75, 0.0));
        this.Items.Push(new Weapon("ItemRevolver",      false,      this.Space, false,  1.25, 0.0));
        this.Items.Push(new Weapon("ItemRock",          true,       this.Space, true,   0.50, 0.0));
        this.Items.Push(new Weapon("ItemShotgun",       true,       this.Space, true,   1.50, 0.0));
        this.Items.Push(new Weapon("ItemBoulder",       true,       this.Space, true,   1.00, 0.0));
        this.Items.Push(new Weapon("ItemMinigun",       true,       this.Space, true,   0.05, 0.0));
        this.Items.Push(new Weapon("ItemSniper",        true,       this.Space, true,   1.75, 0.0));
        this.Items.Push(new Weapon("ItemGouda",         true,       this.Space, true,   1.25, 0.0));
        
        this.Items.Push(new Item("ItemAmmoPistol",      true));
        this.Items.Push(new Item("ItemAmmoShotgun",     true));
        this.Items.Push(new Item("ItemAmmoMinigun",     true));
        this.Items.Push(new Item("ItemAmmoAssault",     false));
        this.Items.Push(new Item("ItemAmmoSniper",      true));
        this.Items.Push(new Item("ItemHealthPack",      false));
        this.Items.Push(new Item("ItemIronOre",         true));
        this.Items.Push(new Item("ItemIron",            true));
        this.Items.Push(new Item("ItemCopperOre",       false));
        this.Items.Push(new Item("ItemCopper",          false));
        this.Items.Push(new Item("ItemGoldOre",         false));
        this.Items.Push(new Item("ItemGold",            true));
        
        this.GiveItemsID();
        
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "");
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "hold on a sec (Pistol)");
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "Undecided (Revolver)");
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "Rock");
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "Undecided (Shotgun)");
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "Boulder");
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "L134 Devastator (Minigun)");
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "Undecided (Sniper Rifle)");
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "Gouda Cheese");
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "Ammunition (Pistol)");
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "Ammunition (Shotgun)");
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "Ammunition (Minigun)");
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "Ammunition (Assault Rifle)");
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "Ammunition (Sniper Rifle)");
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "Health Pack");
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "Iron (Unprocessed)");
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "Iron (Processed)");
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "Copper (Unprocessed)");
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "Copper (Processed)");
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "Gold (Unprocessed)");
        this.ID = this.Items[this.ID].SetRecognizableName(this.ID, "Gold (Processed)");
        
        this.ID = 0;
        
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Air");          // AIR
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Weapon");       // PISTOL
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Weapon");       // REVOLVER
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Weapon");       // ROCK
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Weapon");       // SHOTGUN
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Weapon");       // BOULDER
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Weapon");       // MINIGUN
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Weapon");       // SNIPER RIFLE
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Weapon");       // GOUDA CHEESE
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Item");         // AMMO (PISTOL)
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Item");         // AMMO (SHOTGUN)
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Item");         // AMMO (MINIGUN)
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Item");         // AMMO (ASSAULT RIFLE)
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Item");         // AMMO (SNIPER RIFLE)
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Item");         // HEALTH PACK
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Resource");     // IRON ORE
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Resource");     // IRON
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Resource");     // COPPER ORE
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Resource");     // COPPER
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Resource");     // GOLD ORE
        this.ID = this.Items[this.ID].SetItemType(this.ID, "Resource");     // GOLD
        
        this.ID = 0;
        
        this.ShowItemIDs(true);
        
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        
    }
    
    function OnLogicUpdate(event : UpdateEvent) {
        
        this.UpdateItems(event.Dt);
        
    }
    
    function GiveItemsID() {
        this.ID = 0;
        while(this.ID < this.Items.Count)
            this.ID = this.Items[this.ID].SetID(this.ID);
        Console.WriteLine("`this.ID - 1` items successfully created");
        this.ID = 0;
    }
    
    function ShowItemIDs(showIDs : Boolean) {
        this.ID = 0;
        while(this.ID < this.Items.Count)
            this.ID = this.Items[this.ID].ShowLabelID(this.ID, showIDs);
        this.ID = 0;
    }
    
    function UpdateItems(dt : Real) {
        var currID = this.Space.FindObjectByName(Global.EntityPlayer).Inventory.GetItemInMainHand();
        this.Items[currID].Update(dt);
        if(this.Items[currID].ItemRecognizableNameBase != "") {
            this.Space.FindObjectByName(Global.EntityPlayer).FindChildByName("EntityGun").Sprite.Visible = true;
            if(this.Items[currID].ItemType == "Weapon") {
                this.Space.FindObjectByName(Global.EntityPlayer).FindChildByName("EntityGun").Sprite.SpriteSource = SpriteSource.Find(String.Concatenate("Weapon", this.Items[currID].ItemName.SubStringFromRuneIndices(4, this.Items[currID].ItemName.Count)));
            } else if(this.Items[currID].Sprite != SpriteSource.Circle) {
                this.Space.FindObjectByName(Global.EntityPlayer).FindChildByName("EntityGun").Sprite.SpriteSource = this.Items[currID].Sprite;
            }
        } else {
            this.Space.FindObjectByName(Global.EntityPlayer).FindChildByName("EntityGun").Sprite.Visible = false;
        }
    }
    
}
