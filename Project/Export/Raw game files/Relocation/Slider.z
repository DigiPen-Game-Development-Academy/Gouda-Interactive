// AUTHOR: HUDSON GREEN
// CONTRIBUTORS: N/A

class Slider : ZilchComponent {
    
    [Property] var Label : String = "Slider";
    [Property] var CurrentAmount : Real = 50.0;
    [Property] var MaxAmount : Real = 100.0;
    [Property] var SliderColor : Real4 = Real4(0.05, 0.75, 0.05, 1.0);
    
    var CurrScaleAmount : Real = 5.0;
    var MaxScaleAmount : Real3 = Real3(10.0, 0.75, 1.0);
    
    function Initialize(init : CogInitializer) {
        
        this.Owner.FindChildByName("Slider").Sprite.Color = this.SliderColor;
        
        this.MaxScaleAmount = this.Owner.FindChildByName("SliderBG").Transform.Scale;
        this.CurrScaleAmount = (this.CurrentAmount / this.MaxAmount) * this.MaxScaleAmount.X;
        
        this.Owner.FindChildByName("Slider").Transform.Scale = Real3(this.CurrScaleAmount, this.MaxScaleAmount.YZ);
        this.Owner.SpriteText.Text = "`this.Label`: `this.CurrentAmount`/`this.MaxAmount`";
        
        Zero.Connect(this.Owner.FindChildByName("SliderBG"), Events.MouseUpdate, this.OnMouseUpdate);
        
    }
    
    function OnMouseUpdate(event : ViewportMouseEvent) {
        
        this.Owner.FindChildByName("Slider").Sprite.Color = this.SliderColor;
        
        this.CurrScaleAmount = event.HitPosition.X + this.MaxScaleAmount.X / 2;
        
        if(event.Mouse.IsButtonDown(MouseButtons.Left)) {
            
            var slider = this.Owner.FindChildByName("Slider");
            
            this.MaxScaleAmount = this.Owner.FindChildByName("SliderBG").Transform.Scale;
            this.CurrentAmount = Math.Round(this.CurrScaleAmount.X * this.MaxAmount / 10);
            
            slider.Transform.Scale = Real3((this.CurrentAmount / this.MaxAmount) * this.MaxScaleAmount.X, this.MaxScaleAmount.YZ);
            this.Owner.SpriteText.Text = "`this.Label`: `this.CurrentAmount`/`this.MaxAmount`";
            
        }
        
    }
    
}
