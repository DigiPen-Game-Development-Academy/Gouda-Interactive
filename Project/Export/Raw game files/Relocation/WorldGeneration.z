// AUTHOR: MYLES BUSIG
// CONTRIBUTORS: HUDSON GREEN

class WorldGeneration : ZilchComponent
{
    var Player : Cog = null;
    
    var TileLocations : Array[Real3] = Array[Real3]();
    
    [Property] var MapRadius : Real = 240.0;
    [Property] var NumberOfTiles : Integer = 1;
    [Property] var TileDiameter : Integer = 32;
    [Property] var MaxRadiusFromPlayer : Real = 64;
    
    var TileSpawnLocation : Real3;
    
    var TileToSpawn : Archetype;
    
    function Initialize(init : CogInitializer)
    {
        this.Player = this.Space.FindObjectByName("EntityPlayer");
        
        this.TileSpawnLocation = Real3(-this.MapRadius, this.MapRadius, 0.0);
        
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        //Console.WriteLine("`this.TileSpawnLocation`");
        
        if (this.TileSpawnLocation.Y < -this.MapRadius)
            this.TileSpawnLocation = Real3(-this.MapRadius, this.MapRadius, 0.0);
        
        //Console.WriteLine("Checkpoint1");
        
        if (this.TileSpawnLocation.X >= this.Player.Transform.Translation.X - this.MaxRadiusFromPlayer &&
            this.TileSpawnLocation.X <= this.Player.Transform.Translation.X + this.MaxRadiusFromPlayer &&
            this.TileSpawnLocation.Y >= this.Player.Transform.Translation.Y - this.MaxRadiusFromPlayer &&
            this.TileSpawnLocation.Y <= this.Player.Transform.Translation.Y + this.MaxRadiusFromPlayer)
        {
            Console.WriteLine("Checkpoint2");
            
            Console.WriteLine("Tile At Position: `this.CheckForTileAtPosition(this.TileSpawnLocation)`");
            
            if (this.CheckForTileAtPosition(this.TileSpawnLocation) == true)
            {
                this.MoveToNextTile();
                
                Console.WriteLine("Checkpoint 4");
                
                return;
            }
            
            Console.WriteLine("Checkpoint 3");
            
            var tileToSpawnGen = new Random();
            var tileToSpawn = Math.Round(tileToSpawnGen.Range(1, this.NumberOfTiles));
            
            Console.WriteLine("TileToSpawn: `tileToSpawn`");
            
            this.TileToSpawn = Archetype.Find(this.Space.FindObjectByName("Tile`tileToSpawn`").ArchetypeName);
            
            var lastSpawnedTileMap = this.Space.CreateAtPosition(this.TileToSpawn, this.TileSpawnLocation);
            
            this.TileLocations.Add(this.TileSpawnLocation);
            
            this.MoveToNextTile();
        }
        else
        {
            this.MoveToNextTile();
        }
    }
    
    function CheckForTileAtPosition(position : Real3) : Boolean
    {
        Console.WriteLine("Checking For Tile at Position: `position`");
        
        if (this.TileLocations.Count == 0)
            return false;
        
        for (var i = 0; i < this.TileLocations.Count; ++i)
        {
            if (this.TileLocations[i].X == position.X && this.TileLocations[i].Y == position.Y)
            {
                return true;
            }
        }
        
        return false;
    }
    
    function MoveToNextTile()
    {
        this.TileSpawnLocation += Real3(this.TileDiameter, 0.0, 0.0);
        
        if (this.TileSpawnLocation.X > this.MapRadius)
            this.TileSpawnLocation = Real3(-this.MapRadius, this.TileSpawnLocation.Y - this.TileDiameter, -0.5);
    }
}
