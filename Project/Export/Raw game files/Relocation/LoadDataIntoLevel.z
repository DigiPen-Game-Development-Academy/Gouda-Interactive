class LoadDataIntoLevel : ZilchComponent
{
    [Static] var Space : Space;
    
    // Player data:
    [Static] var PlayerName : String;
    [Static] var PlayerPosition : String;
    [Static] var PlayerHealth : Real;
    [Static] var PlayerSkin : Integer;
    [Static] var PlayerBalance : Real;
    [Static] var PlayerInv : String;
    [Static] var PlayerInvCount : String;
    
    // TO DO: World data:
    [Static] var CurrentWorld : String;
    
    // Settings data:
    [Static] var MenuAnimations : Boolean;
    [Static] var Vignette : Boolean;
    [Static] var PlayerTooltips : Boolean;
    [Static] var EnemyTooltips : Boolean;
    [Static] var MasterVolume : Real;
    [Static] var MusicVolume : Real;
    [Static] var SFXVolume : Real;
    
    [Static] var Player : Cog;
    
    [Static] function LoadData()
    {
        LoadDataIntoLevel.Player = LoadDataIntoLevel.Space.FindObjectByName("EntityPlayer");
        
        // Load World Data:
        //LoadDataIntoLevel.Space.LoadLevel(Level.Find(LoadDataIntoLevel.CurrentWorld));
        
        // Load Player Data:
        LoadDataIntoLevel.Player.PlayerProperties.PlayerName = LoadDataIntoLevel.PlayerName;
        LoadDataIntoLevel.Player.PlayerProperties.SetUsername(LoadDataIntoLevel.PlayerName);
        LoadDataIntoLevel.Player.Transform.Translation = ToFromStrings.StringToReal3(LoadDataIntoLevel.PlayerPosition);
        LoadDataIntoLevel.Player.Health.CurrentHealth = LoadDataIntoLevel.PlayerHealth;
        //LoadDataIntoLevel.Player.PlayerProperties.PlayerSkin = LoadDataIntoLevel.PlayerSkin;
        LoadDataIntoLevel.Player.PlayerProperties.Balance = LoadDataIntoLevel.PlayerBalance;
        PlayerData.InventoryContents = ToFromStrings.StringToIntArray(LoadDataIntoLevel.PlayerInv);
        PlayerData.InventoryContentsCount = ToFromStrings.StringToIntArray(LoadDataIntoLevel.PlayerInvCount);
        
        // Load Settings Data:
        GameSetting.EnableUIAnimations = LoadDataIntoLevel.MenuAnimations;
        GameSetting.EnableVignette = LoadDataIntoLevel.Vignette;
        GameSetting.PlayerTooltip = LoadDataIntoLevel.PlayerTooltips;
        GameSetting.EnemyTooltip = LoadDataIntoLevel.EnemyTooltips;
        GameSetting.MasterVolume = LoadDataIntoLevel.MasterVolume;
        GameSetting.MusicVolume = LoadDataIntoLevel.MusicVolume;
        GameSetting.SoundEffectsVolume = LoadDataIntoLevel.SFXVolume;
    }
}
